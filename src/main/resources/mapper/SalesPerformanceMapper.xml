<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yks.bi.dao.SalesPerformanceMapper">
	<resultMap id="BaseResultMap" type="com.yks.bi.dto.report.SalesPerformance">
		<id column="report_date" jdbcType="DATE" property="reportDate" />
		<id column="business" jdbcType="VARCHAR" property="business" />
		<result column="orders" jdbcType="INTEGER" property="orders" />
		<result column="sales" jdbcType="REAL" property="sales" />
	</resultMap>
	<sql id="Base_Column_List">
		report_date, business, orders, sales
	</sql>

	<select id="selectByPrimaryKey" parameterType="com.yks.bi.dto.report.SalesPerformanceKey"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from dailysalesreports
		where report_date = #{reportDate,jdbcType=DATE}
		and business = #{business,jdbcType=VARCHAR}
	</select>


	<select id="selectDomesticPlatforms" resultType="String">
		select distinct business from dailysalesreports
		where business = 'ebay'
		union
		select distinct business from dailysalesreports
		where 1=1 and business like 'cn_%'
	</select>

	<select id="selectAllCount" resultMap="BaseResultMap">
		select business, sum(orders) orders, sum(sales) sales
		from dailysalesreports
		where 1=1
		<choose>
			<when test="business != null">
				and business = #{business,jdbcType=VARCHAR}
			</when>
			<otherwise>
				and (business like 'cn_%' or business ='ebay')
			</otherwise>
		</choose>
		<if test="startDate != null">
    			<![CDATA[and report_date >= #{startDate,jdbcType=DATE}]]>
		</if>
		<if test="endDate != null">
	  		 	 <![CDATA[and report_Date <= #{endDate,jdbcType=DATE}]]>
		</if>
		GROUP BY business
	</select>

	<select id="selectAll" resultMap="BaseResultMap" parameterType="com.yks.bi.dto.report.SalesPerformanceKey">
		select
		<include refid="Base_Column_List" />
		from `dailysalesreports`
		where 1=1
		<if test="business != null">
			and business = #{business,jdbcType=VARCHAR}
		</if>
		<if test="startDate != null">
			and report_date >= #{startDate,jdbcType=DATE}
		</if>
		<if test="endDate != null">
			<![CDATA[and report_date <= #{endDate,jdbcType=DATE}]]>
		</if>
	</select>

	<!--用于业绩汇总的各平台销售业绩报表查询平台 -->
	<select id="selectPlatforms" resultType="java.lang.String">
		SELECT DISTINCT business 
		FROM `dailysalesreports`
		WHERE business != "a_ll" 
		AND business != "amazon" 
		AND business != "new_all" 
		AND business != "ebay"
		<if test="business != null">
			AND business like concat('%',#{business,jdbcType=VARCHAR},'%')
		</if>
		ORDER BY business
	</select>

<!-- 	用于业绩汇总的各平台销售业绩报表的柱状及曲线图的查询
	<select id="selectAllChartSum" resultMap="BaseResultMap" parameterType="com.yks.bi.dto.report.SalesPerformanceKey">
		SELECT report_date, business, sum(orders) orders, sum(sales) sales
		FROM `dailysalesreports`
		WHERE business != "a_ll" 
		AND business != "amazon" 
		AND business != "new_all" 
		AND business != "ebay"
		<if test="business != null">
			AND business = #{business,jdbcType=VARCHAR}
		</if>
		<if test="startDate != null">
			AND report_date >= #{startDate,jdbcType=DATE}
		</if>
		<if test="endDate != null">
			<![CDATA[AND report_date <= #{endDate,jdbcType=DATE}]]>
		</if>
		GROUP BY business
	</select> -->

	<!--用于业绩汇总的各平台销售业绩报表查询、导出和图形的查询 -->
	<select id="selectAllGridAndExport" resultMap="BaseResultMap" parameterType="com.yks.bi.dto.report.SalesPerformanceKey">
		SELECT 
		<include refid="Base_Column_List" />
		FROM `dailysalesreports`
		WHERE business != "a_ll"
		AND business != "amazon"
		AND business != "new_all"
		AND business != "ebay"
		<if test="business != null">
			AND business = #{business,jdbcType=VARCHAR}
		</if>
		<if test="startDate != null">
			AND report_date >= #{startDate,jdbcType=DATE}
		</if>
		<if test="endDate != null">
			<![CDATA[AND report_date <= #{endDate,jdbcType=DATE}]]>
		</if>
	</select>

	<select id="selectnewAll" resultMap="BaseResultMap" parameterType="com.yks.bi.dto.report.SalesPerformanceKey">
		SELECT
		<include refid="Base_Column_List" />
		FROM dailysalesreports
		WHERE business like 'new\_%' and business not in( 'new_newegg','new_overstock')
		<if test="business != null">
			and business = #{business,jdbcType=VARCHAR}
		</if>
		<if test="startDate != null">
			and report_date >= #{startDate,jdbcType=DATE}
		</if>
		<if test="endDate != null">
	    <![CDATA[and report_date <= #{endDate,jdbcType=DATE}]]>
		</if>
	</select>
	
	<select id="selectnewAllSum" resultMap="BaseResultMap" parameterType="com.yks.bi.dto.report.SalesPerformanceKey">
		select
		report_date,sum(orders) orders,sum(sales) sales
		from dailysalesreports
		where business like 'new\_%' and business not in( 'new_newegg','new_overstock')
		<if test="business != null">
			and business = #{business,jdbcType=VARCHAR}
		</if>
		<if test="startDate != null">
			and report_date >= #{startDate,jdbcType=DATE}
		</if>
		<if test="endDate != null">
	    <![CDATA[and report_date <= #{endDate,jdbcType=DATE}]]>
		</if>
		group by report_date
	</select>

	<!--查询平台 -->
	<select id="selectnewPlatforms" resultMap="BaseResultMap">
		SELECT business FROM dailysalesreports 
		WHERE business like 'new\_%' and business not in( 'new_newegg','new_overstock') 
		GROUP by business
	</select>


	<delete id="deleteByPrimaryKey" parameterType="com.yks.bi.dto.report.SalesPerformanceKey">
		delete from dailysalesreports
		where report_date = #{reportDate,jdbcType=DATE}
		and business = #{business,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.yks.bi.dto.report.SalesPerformance">
		insert into dailysalesreports (report_date, business, orders,
		sales)
		values (#{reportDate,jdbcType=DATE}, #{business,jdbcType=VARCHAR},
		#{orders,jdbcType=INTEGER},
		#{sales,jdbcType=REAL})
	</insert>
	<insert id="insertSelective" parameterType="com.yks.bi.dto.report.SalesPerformance">
		insert into dailysalesreports
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="reportDate != null">
				report_date,
			</if>
			<if test="business != null">
				business,
			</if>
			<if test="orders != null">
				orders,
			</if>
			<if test="sales != null">
				sales,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="reportDate != null">
				#{reportDate,jdbcType=DATE},
			</if>
			<if test="business != null">
				#{business,jdbcType=VARCHAR},
			</if>
			<if test="orders != null">
				#{orders,jdbcType=INTEGER},
			</if>
			<if test="sales != null">
				#{sales,jdbcType=REAL},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.yks.bi.dto.report.SalesPerformance">
		update dailysalesreports
		<set>
			<if test="orders != null">
				orders = #{orders,jdbcType=INTEGER},
			</if>
			<if test="sales != null">
				sales = #{sales,jdbcType=REAL},
			</if>
		</set>
		where report_date = #{reportDate,jdbcType=DATE}
		and business = #{business,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.yks.bi.dto.report.SalesPerformance">
		update dailysalesreports
		set orders = #{orders,jdbcType=INTEGER},
		sales = #{sales,jdbcType=REAL}
		where report_date = #{reportDate,jdbcType=DATE}
		and business = #{business,jdbcType=VARCHAR}
	</update>

</mapper>